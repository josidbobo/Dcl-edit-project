import { Windy } from "src/components/windy"
export type DceScene = {
    /**
     * The root entity of the scene. All entities in this scene are children of either this scene root entity, or of another entity in the scene
     */
    sceneRoot: DceEntity

    /**
     * Shows the scene with all its entities. Shortcut for `sceneRoot.show()`
     */
    show: () => void;

    /**
     * Hides the scene with all its entities. Shortcut for `sceneRoot.hide()`
     */
    hide: () => void
}

export type DceEntity = {
    /**
     * The Decentraland entity
     */
    entity: Entity

    /**
     * The Transform component of the entity. Although, it is not required by Decentraland, every DceEntity will have a Transform added
     */
    transform: Transform

    /**
     * Show this entity and all its children. This calls `engine.addEntity(entity)` internally.
     */
    show: () => void

    /**
     * Hide this entity and all its children. This calls `engine.removeEntity(entity)` internally.
     */
    hide: () => void
}



//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

export type WithGLTFShape = {
    gLTFShape: GLTFShape
}

export type WithWindy = {
    windy: Windy
}

export type NewScene = DceScene & {
    exposed: {
    }
}


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

export class SceneFactory {
    /**
     * Creates a new instance of the scene NewScene
     * @param rootEntity specify a root entity for the newly created scene. If null, a new Entity will be generated as the root
     */
    static createNewScene(rootEntity: Entity | null = null): NewScene {
        if (rootEntity == null) {
            rootEntity = new Entity()
            const rootEntityTrans = new Transform()
            rootEntity.addComponent(rootEntityTrans)
        } else {
            if (!rootEntity.hasComponent(Transform)) {
                rootEntity.addComponent(new Transform)
            }
        }


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_BeachUmbrella1 = new Entity("Beach Umbrella")
        const ent4_BeachUmbrella1Transform = new Transform()
        ent4_BeachUmbrella1Transform.position = new Vector3(7.545617, 0.371004, 6.545616)
        ent4_BeachUmbrella1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_BeachUmbrella1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_BeachUmbrella1Transform && typeof ent4_BeachUmbrella1Transform.init === "function")
        {
            ent4_BeachUmbrella1Transform.init(ent4_BeachUmbrella1)
        }
        ent4_BeachUmbrella1.addComponent(ent4_BeachUmbrella1Transform)
        const ent4_BeachUmbrella1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/Umbrella_01/Umbrella_01.glb")
        ent4_BeachUmbrella1GLTFShape.visible = true
        ent4_BeachUmbrella1GLTFShape.withCollisions = true
        ent4_BeachUmbrella1GLTFShape.isPointerBlocker = true
        if("init" in ent4_BeachUmbrella1GLTFShape && typeof ent4_BeachUmbrella1GLTFShape.init === "function")
        {
            ent4_BeachUmbrella1GLTFShape.init(ent4_BeachUmbrella1)
        }
        ent4_BeachUmbrella1.addComponent(ent4_BeachUmbrella1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_ClassicBench1 = new Entity("Classic Bench")
        const ent4_ClassicBench1Transform = new Transform()
        ent4_ClassicBench1Transform.position = new Vector3(4.252723, 0.371004, 1.838509)
        ent4_ClassicBench1Transform.rotation = new Quaternion(0, 0.5, 0, 0.8660254)
        ent4_ClassicBench1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_ClassicBench1Transform && typeof ent4_ClassicBench1Transform.init === "function")
        {
            ent4_ClassicBench1Transform.init(ent4_ClassicBench1)
        }
        ent4_ClassicBench1.addComponent(ent4_ClassicBench1Transform)
        const ent4_ClassicBench1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/Bench_01/Bench_01.glb")
        ent4_ClassicBench1GLTFShape.visible = true
        ent4_ClassicBench1GLTFShape.withCollisions = true
        ent4_ClassicBench1GLTFShape.isPointerBlocker = true
        if("init" in ent4_ClassicBench1GLTFShape && typeof ent4_ClassicBench1GLTFShape.init === "function")
        {
            ent4_ClassicBench1GLTFShape.init(ent4_ClassicBench1)
        }
        ent4_ClassicBench1.addComponent(ent4_ClassicBench1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_FoldingChair1 = new Entity("Folding Chair")
        const ent4_FoldingChair1Transform = new Transform()
        ent4_FoldingChair1Transform.position = new Vector3(7.976614, 0.01909441, 7.976614)
        ent4_FoldingChair1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_FoldingChair1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_FoldingChair1Transform && typeof ent4_FoldingChair1Transform.init === "function")
        {
            ent4_FoldingChair1Transform.init(ent4_FoldingChair1)
        }
        ent4_FoldingChair1.addComponent(ent4_FoldingChair1Transform)
        const ent4_FoldingChair1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/Chair_05/Chair_05.glb")
        ent4_FoldingChair1GLTFShape.visible = true
        ent4_FoldingChair1GLTFShape.withCollisions = true
        ent4_FoldingChair1GLTFShape.isPointerBlocker = true
        if("init" in ent4_FoldingChair1GLTFShape && typeof ent4_FoldingChair1GLTFShape.init === "function")
        {
            ent4_FoldingChair1GLTFShape.init(ent4_FoldingChair1)
        }
        ent4_FoldingChair1.addComponent(ent4_FoldingChair1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_FoldingChair2 = new Entity("Folding Chair")
        const ent4_FoldingChair2Transform = new Transform()
        ent4_FoldingChair2Transform.position = new Vector3(7.976614, 0.01909441, 5.976614)
        ent4_FoldingChair2Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_FoldingChair2Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_FoldingChair2Transform && typeof ent4_FoldingChair2Transform.init === "function")
        {
            ent4_FoldingChair2Transform.init(ent4_FoldingChair2)
        }
        ent4_FoldingChair2.addComponent(ent4_FoldingChair2Transform)
        const ent4_FoldingChair2GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/Chair_05/Chair_05.glb")
        ent4_FoldingChair2GLTFShape.visible = true
        ent4_FoldingChair2GLTFShape.withCollisions = true
        ent4_FoldingChair2GLTFShape.isPointerBlocker = true
        if("init" in ent4_FoldingChair2GLTFShape && typeof ent4_FoldingChair2GLTFShape.init === "function")
        {
            ent4_FoldingChair2GLTFShape.init(ent4_FoldingChair2)
        }
        ent4_FoldingChair2.addComponent(ent4_FoldingChair2GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_PalmTree1 = new Entity("Palm Tree")
        const ent4_PalmTree1Transform = new Transform()
        ent4_PalmTree1Transform.position = new Vector3(5.625877, 0.30547, 12.62588)
        ent4_PalmTree1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_PalmTree1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_PalmTree1Transform && typeof ent4_PalmTree1Transform.init === "function")
        {
            ent4_PalmTree1Transform.init(ent4_PalmTree1)
        }
        ent4_PalmTree1.addComponent(ent4_PalmTree1Transform)
        const ent4_PalmTree1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/PalmTree_01/PalmTree_01.glb")
        ent4_PalmTree1GLTFShape.visible = true
        ent4_PalmTree1GLTFShape.withCollisions = true
        ent4_PalmTree1GLTFShape.isPointerBlocker = true
        if("init" in ent4_PalmTree1GLTFShape && typeof ent4_PalmTree1GLTFShape.init === "function")
        {
            ent4_PalmTree1GLTFShape.init(ent4_PalmTree1)
        }
        ent4_PalmTree1.addComponent(ent4_PalmTree1GLTFShape)
        const ent4_PalmTree1Windy = new Windy()
        ent4_PalmTree1Windy.distance = 0
        if("init" in ent4_PalmTree1Windy && typeof ent4_PalmTree1Windy.init === "function")
        {
            ent4_PalmTree1Windy.init(ent4_PalmTree1)
        }
        ent4_PalmTree1.addComponent(ent4_PalmTree1Windy)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_PalmTree2 = new Entity("Palm Tree")
        const ent4_PalmTree2Transform = new Transform()
        ent4_PalmTree2Transform.position = new Vector3(11.62588, 0.30547, 4.625877)
        ent4_PalmTree2Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_PalmTree2Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_PalmTree2Transform && typeof ent4_PalmTree2Transform.init === "function")
        {
            ent4_PalmTree2Transform.init(ent4_PalmTree2)
        }
        ent4_PalmTree2.addComponent(ent4_PalmTree2Transform)
        const ent4_PalmTree2GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/PalmTree_01/PalmTree_01.glb")
        ent4_PalmTree2GLTFShape.visible = true
        ent4_PalmTree2GLTFShape.withCollisions = true
        ent4_PalmTree2GLTFShape.isPointerBlocker = true
        if("init" in ent4_PalmTree2GLTFShape && typeof ent4_PalmTree2GLTFShape.init === "function")
        {
            ent4_PalmTree2GLTFShape.init(ent4_PalmTree2)
        }
        ent4_PalmTree2.addComponent(ent4_PalmTree2GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_PalmTree3 = new Entity("Palm Tree")
        const ent4_PalmTree3Transform = new Transform()
        ent4_PalmTree3Transform.position = new Vector3(10.62588, 0.30547, 10.62588)
        ent4_PalmTree3Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_PalmTree3Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_PalmTree3Transform && typeof ent4_PalmTree3Transform.init === "function")
        {
            ent4_PalmTree3Transform.init(ent4_PalmTree3)
        }
        ent4_PalmTree3.addComponent(ent4_PalmTree3Transform)
        const ent4_PalmTree3GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/PalmTree_01/PalmTree_01.glb")
        ent4_PalmTree3GLTFShape.visible = true
        ent4_PalmTree3GLTFShape.withCollisions = true
        ent4_PalmTree3GLTFShape.isPointerBlocker = true
        if("init" in ent4_PalmTree3GLTFShape && typeof ent4_PalmTree3GLTFShape.init === "function")
        {
            ent4_PalmTree3GLTFShape.init(ent4_PalmTree3)
        }
        ent4_PalmTree3.addComponent(ent4_PalmTree3GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_PalmTree4 = new Entity("Palm Tree")
        const ent4_PalmTree4Transform = new Transform()
        ent4_PalmTree4Transform.position = new Vector3(6.625877, 0.30547, 0.6258774)
        ent4_PalmTree4Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_PalmTree4Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_PalmTree4Transform && typeof ent4_PalmTree4Transform.init === "function")
        {
            ent4_PalmTree4Transform.init(ent4_PalmTree4)
        }
        ent4_PalmTree4.addComponent(ent4_PalmTree4Transform)
        const ent4_PalmTree4GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/PalmTree_01/PalmTree_01.glb")
        ent4_PalmTree4GLTFShape.visible = true
        ent4_PalmTree4GLTFShape.withCollisions = true
        ent4_PalmTree4GLTFShape.isPointerBlocker = true
        if("init" in ent4_PalmTree4GLTFShape && typeof ent4_PalmTree4GLTFShape.init === "function")
        {
            ent4_PalmTree4GLTFShape.init(ent4_PalmTree4)
        }
        ent4_PalmTree4.addComponent(ent4_PalmTree4GLTFShape)
        const ent4_PalmTree4Windy = new Windy()
        ent4_PalmTree4Windy.distance = 0
        if("init" in ent4_PalmTree4Windy && typeof ent4_PalmTree4Windy.init === "function")
        {
            ent4_PalmTree4Windy.init(ent4_PalmTree4)
        }
        ent4_PalmTree4.addComponent(ent4_PalmTree4Windy)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        const ent4_Sand1 = new Entity("Sand")
        const ent4_Sand1Transform = new Transform()
        ent4_Sand1Transform.position = new Vector3(8.000001, 0, 8)
        ent4_Sand1Transform.rotation = new Quaternion(0, 0, 0, 1)
        ent4_Sand1Transform.scale = new Vector3(1, 1, 1)
        if("init" in ent4_Sand1Transform && typeof ent4_Sand1Transform.init === "function")
        {
            ent4_Sand1Transform.init(ent4_Sand1)
        }
        ent4_Sand1.addComponent(ent4_Sand1Transform)
        const ent4_Sand1GLTFShape = new GLTFShape("dcl-edit/build/builder_assets/FloorBaseSand_01/FloorBaseSand_01.glb")
        ent4_Sand1GLTFShape.visible = true
        ent4_Sand1GLTFShape.withCollisions = true
        ent4_Sand1GLTFShape.isPointerBlocker = true
        if("init" in ent4_Sand1GLTFShape && typeof ent4_Sand1GLTFShape.init === "function")
        {
            ent4_Sand1GLTFShape.init(ent4_Sand1)
        }
        ent4_Sand1.addComponent(ent4_Sand1GLTFShape)


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

        ent4_BeachUmbrella1.setParent(rootEntity)
        ent4_ClassicBench1.setParent(rootEntity)
        ent4_FoldingChair1.setParent(rootEntity)
        ent4_FoldingChair2.setParent(rootEntity)
        ent4_PalmTree1.setParent(rootEntity)
        ent4_PalmTree2.setParent(rootEntity)
        ent4_PalmTree3.setParent(rootEntity)
        ent4_PalmTree4.setParent(rootEntity)
        ent4_Sand1.setParent(rootEntity)

        engine.addEntity(rootEntity)

        return {
            sceneRoot: {
                entity: rootEntity,
                transform: rootEntity.getComponent(Transform),
                show() { engine.addEntity(this.entity) },
                hide() { engine.removeEntity(this.entity) }
            },
            exposed: {


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

            },

            show() { this.sceneRoot.show() },
            hide() { this.sceneRoot.hide() }
        }
    }


//FILE WAS GENERATED BY DCL-Edit!
//DO NOT MODIFY!

}
